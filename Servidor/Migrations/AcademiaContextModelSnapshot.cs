// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Servidor.Context;

#nullable disable

namespace Servidor.Migrations
{
    [DbContext(typeof(AcademiaContext))]
    partial class AcademiaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Servidor.Models.Entidades.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("Servidor.Models.Entidades.AlunoFunc", b =>
                {
                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.HasKey("AlunoId", "FuncionarioId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("AlunoFuncs");
                });

            modelBuilder.Entity("Servidor.Models.Entidades.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("Servidor.Models.Entidades.DepartamentoFuncionario", b =>
                {
                    b.Property<int>("DepartamentoFuncionarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartamentoFuncionarioId"));

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.HasKey("DepartamentoFuncionarioId");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("DepartamentoFuncionarios");
                });

            modelBuilder.Entity("Servidor.Models.Entidades.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Turno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("Servidor.Models.Entidades.AlunoFunc", b =>
                {
                    b.HasOne("Servidor.Models.Entidades.Aluno", "Aluno")
                        .WithMany("AlunosFuncs")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Servidor.Models.Entidades.Funcionario", "Funcionario")
                        .WithMany("AlunoFuncs")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("Servidor.Models.Entidades.DepartamentoFuncionario", b =>
                {
                    b.HasOne("Servidor.Models.Entidades.Departamento", "Departamento")
                        .WithMany("Departamentofuncionarios")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Servidor.Models.Entidades.Funcionario", "Funcionario")
                        .WithOne("DepartamentoFuncionario")
                        .HasForeignKey("Servidor.Models.Entidades.DepartamentoFuncionario", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("Servidor.Models.Entidades.Aluno", b =>
                {
                    b.Navigation("AlunosFuncs");
                });

            modelBuilder.Entity("Servidor.Models.Entidades.Departamento", b =>
                {
                    b.Navigation("Departamentofuncionarios");
                });

            modelBuilder.Entity("Servidor.Models.Entidades.Funcionario", b =>
                {
                    b.Navigation("AlunoFuncs");

                    b.Navigation("DepartamentoFuncionario")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
